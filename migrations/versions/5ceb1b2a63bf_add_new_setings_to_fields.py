"""add new setings to fields

Revision ID: 5ceb1b2a63bf
Revises: 05954723c2fd
Create Date: 2024-07-24 20:47:43.815141

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "5ceb1b2a63bf"
down_revision: Union[str, None] = "05954723c2fd"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("users", "username", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("users", "firstname", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("users", "lastname", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("users", "hashed_password", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_constraint("users_phone_key", "users", type_="unique")
    op.drop_constraint("users_username_key", "users", type_="unique")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint("users_username_key", "users", ["username"])
    op.create_unique_constraint("users_phone_key", "users", ["phone"])
    op.alter_column("users", "hashed_password", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("users", "lastname", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("users", "firstname", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("users", "username", existing_type=sa.VARCHAR(), nullable=False)
    # ### end Alembic commands ###
