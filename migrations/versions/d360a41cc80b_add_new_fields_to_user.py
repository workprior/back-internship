"""add new fields to User

Revision ID: d360a41cc80b
Revises: 5ceb1b2a63bf
Create Date: 2024-07-24 23:13:00.632417

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "d360a41cc80b"
down_revision: Union[str, None] = "5ceb1b2a63bf"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("users", "firstname", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("users", "hashed_password", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("users", "lastname", existing_type=sa.VARCHAR(), nullable=False)
    op.create_unique_constraint(None, "users", ["phone"])
    op.drop_column("users", "created_at")
    op.drop_column("users", "updated_at")
    op.drop_column("users", "username")
    op.drop_column("users", "avatar")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("users", sa.Column("avatar", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column("users", sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column(
        "users", sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "users", sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(None, "users", type_="unique")
    op.alter_column("users", "lastname", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("users", "hashed_password", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("users", "firstname", existing_type=sa.VARCHAR(), nullable=True)
    # ### end Alembic commands ###
