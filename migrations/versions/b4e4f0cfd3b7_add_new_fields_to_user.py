"""add new fields to User

Revision ID: b4e4f0cfd3b7
Revises: 0ef51e3044be
Create Date: 2024-07-15 20:25:25.311027

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b4e4f0cfd3b7"
down_revision: Union[str, None] = "0ef51e3044be"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("users", sa.Column("email", sa.String(), nullable=False))
    op.add_column("users", sa.Column("is_active", sa.Boolean(), nullable=True))
    op.add_column("users", sa.Column("lastname", sa.String(), nullable=False))
    op.add_column("users", sa.Column("city", sa.String(), nullable=True))
    op.add_column("users", sa.Column("phone", sa.String(), nullable=True))
    op.add_column("users", sa.Column("avatar", sa.String(), nullable=True))
    op.add_column("users", sa.Column("is_superuser", sa.Boolean(), nullable=True))
    op.add_column("users", sa.Column("created_at", sa.DateTime(), nullable=True))
    op.add_column("users", sa.Column("updated_at", sa.DateTime(), nullable=True))
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_unique_constraint(None, "users", ["phone"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "users", type_="unique")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_column("users", "updated_at")
    op.drop_column("users", "created_at")
    op.drop_column("users", "is_superuser")
    op.drop_column("users", "avatar")
    op.drop_column("users", "phone")
    op.drop_column("users", "city")
    op.drop_column("users", "lastname")
    op.drop_column("users", "is_active")
    op.drop_column("users", "email")
    # ### end Alembic commands ###
